clc
global m tf
mu=0.03;beta=3e-4;rho=0.0;%参数设置
f=@(x,u)[-beta*x(1)*x(2)-u*x(1),beta*x(1)*x(2)-mu*x(2),-rho*x(3)];
fx=@(x,u)[-beta*x(2)-u,-beta*x(1),0;beta*x(2),beta*x(1)-mu,0;0,0,-rho];
fu=@(x,u)[-x(1);0;0];
c=1;ku=1;%被积函数参数设置
'如果要求目标函数是控制的一次函数，请从键盘输入1，否则，输入2；然后按Enter继续'
slo=input('目标函数中控制的次数=')
if slo==1;L=@(x,u,t)(c*x(2)+ku*u)*x(3);Lx=@(x,u,t)[0,c*x(3),(c*x(2)+ku*u)];Lu=@(x,u,t)ku*x(3);%目标中的积分函数
elseif slo==2; L=@(x,u,t)(c*x(2)+ku*u^2)*x(3);Lx=@(x,u,t)[0,c*x(3),(c*x(2)+ku*u^2)];Lu=@(x,u,t)ku*u*2*x(3);
end;
x0=[1000,100,1];lx=length(x0);%初始状态变量
tf=100;%末端时间
lu=1;%一维控制变量
U=0.01*ones(400,1);
n=size(U,1);%控制变量分段数
m=max(1,floor(tf/n));%m为每一个控制分段内的时间离散分段数
J=[];CJ=[];
Ul=0*ones(n*lu,1);%控制下界
UM=0.5*ones(n*lu,1);%控制上界为0.05
fco=0;
maxk=200;
for kss=1:maxk;%循环
    [fk,X]=lifli(U,f,L,x0);%求目标函数
    J=[J,fk]%存储目标函数和约束函数的值
    Z=zlifli(U,X,fx,Lx);%求协态变量
    gk=dlifli(U,X,Z,fu,Lu);%求目标函数梯度
     %下面的语句通过线性规划寻找一个可行下降方向
     options=optimset('Largescale','on');
    [d,fopt,EX,output,lam]=linprog(gk,[],[],[],[],Ul-U,UM-U,[],options);
    if norm(fopt)/fk<1e-8;break,end;%
    if fopt>=0;'该点没有可行的下降方向，满足F-J条件，终止迭代',break, end;
    if kss==1;tm=0.1;end;
    for mi=0:20
        step=tm*0.5^mi;
       Uli=U+step*d;
       [fli,Xli]=lifli(Uli,f,L,x0);fco=fco+1;
       sb=fli-fk-0.1*step*d'*gk;
       if sb<=0;break;end;
    end;
   if sb<=0;U=Uli;else 'd不是下降方向',wrong,break, end;
   tm=min(1,1.2*step);
end;
if slo==2;fli=lifli(Uli,f,@(x,u,t)ku*u^2*x(3),x0);
strcat('二次控制花费=',mat2str(fli))
[li,li1]=min(diff(U));t1=li1*tf/size(U,1)
    strcat('控制切换时间=',mat2str(t1))
elseif slo==1;
    fli=lifli(Uli,f,@(x,u,t)ku*u*x(3),x0);
    strcat('一次控制花费=',mat2str(fli))
    [li,li1]=find(U>=UM*0.999);li=max(li);t1=li*tf/size(U,1);
    strcat('控制切换时间=',mat2str(t1))
end;
Jx0=-Z(1,:);%目标函数对初值的导数
bvalue=Jx0;%计算边际成本，即约束最优值对初值的导数
bvalue(3)=[];%
strcat('约束最优值对初值(S0,I0)的导数=',mat2str(bvalue))%边际成本

[J,X]=lifli(U,f,L,x0);%J为目标值，X为状态轨迹
sl={'S(t)','I(t)'};figure;h=tf/n/m;for li=1:2;subplot(3,2,li);plot(0:h:tf,X(:,li));legend(sl(li));
    axis([0,tf,0,max(X(:,li))*1.2]);end;%做出状态轨迹
sl={'S(t)协态变量','I(t)协态变量'};
for li=1:2;subplot(3,2,li+2);plot(0:h:tf,-Z(:,li));legend(sl(li));
    axis([0,tf,-Inf,Inf]);end;%做出协态轨迹
Us=[];for k=1:m;Us=[Us,U];end;Us=reshape(Us',numel(Us),1);
subplot(3,2,5);plot(0:h:tf-h,Us);legend('u(t)');axis([0,tf,0,UM(1,1)*1.3]);%做出控制轨迹
